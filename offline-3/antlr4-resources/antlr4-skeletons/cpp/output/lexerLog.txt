Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme x
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme y
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme z
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 1: Token <FLOAT> Lexeme float
Line# 1: Token <ID> Lexeme a
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 3: Token <INT> Lexeme int
Line# 3: Token <ID> Lexeme var
Line# 3: Token <LPAREN> Lexeme (
Line# 3: Token <INT> Lexeme int
Line# 3: Token <ID> Lexeme a
Line# 3: Token <COMMA> Lexeme ,
Line# 3: Token <INT> Lexeme int
Line# 3: Token <ID> Lexeme b
Line# 3: Token <RPAREN> Lexeme )
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 5: Token <INT> Lexeme int
Line# 5: Token <ID> Lexeme foo3
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <INT> Lexeme int
Line# 5: Token <ID> Lexeme a
Line# 5: Token <COMMA> Lexeme ,
Line# 5: Token <INT> Lexeme int
Line# 5: Token <ID> Lexeme b
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 7: Token <INT> Lexeme int
Line# 7: Token <ID> Lexeme func
Line# 7: Token <LPAREN> Lexeme (
Line# 7: Token <INT> Lexeme int
Line# 7: Token <ID> Lexeme c
Line# 7: Token <COMMA> Lexeme ,
Line# 7: Token <INT> Lexeme int
Line# 7: Token <ID> Lexeme d
Line# 7: Token <RPAREN> Lexeme )
Line# 7: Token <LCURL> Lexeme {
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 7
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 11: Token <INT> Lexeme int
Line# 11: Token <ID> Lexeme correct_foo
Line# 11: Token <LPAREN> Lexeme (
Line# 11: Token <INT> Lexeme int
Line# 11: Token <ID> Lexeme a
Line# 11: Token <COMMA> Lexeme ,
Line# 11: Token <FLOAT> Lexeme float
Line# 11: Token <ID> Lexeme b
Line# 11: Token <RPAREN> Lexeme )
Line# 11: Token <LCURL> Lexeme {
Line# 12: Token <RETURN> Lexeme return
Line# 12: Token <ID> Lexeme a
Line# 12: Token <ADDOP> Lexeme +
Line# 12: Token <CONST_INT> Lexeme 3
Line# 12: Token <SEMICOLON> Lexeme ;
Line# 13: Token <RCURL> Lexeme }
Line# 16: Token <VOID> Lexeme void
Line# 16: Token <ID> Lexeme foo
Line# 16: Token <LPAREN> Lexeme (
Line# 16: Token <INT> Lexeme int
Line# 16: Token <ID> Lexeme a
Line# 16: Token <RPAREN> Lexeme )
Line# 16: Token <LCURL> Lexeme {
Line# 17: Token <ID> Lexeme y
Line# 17: Token <ASSIGNOP> Lexeme =
Line# 17: Token <CONST_INT> Lexeme 6
Line# 17: Token <SEMICOLON> Lexeme ;
Line# 18: Token <RCURL> Lexeme }
Line# 20: Token <INT> Lexeme int
Line# 20: Token <ID> Lexeme foo2
Line# 20: Token <LPAREN> Lexeme (
Line# 20: Token <INT> Lexeme int
Line# 20: Token <ID> Lexeme a
Line# 20: Token <COMMA> Lexeme ,
Line# 20: Token <INT> Lexeme int
Line# 20: Token <ID> Lexeme a
Line# 20: Token <COMMA> Lexeme ,
Line# 20: Token <FLOAT> Lexeme float
Line# 20: Token <ID> Lexeme b
Line# 20: Token <RPAREN> Lexeme )
Line# 20: Token <LCURL> Lexeme {
Line# 21: Token <RETURN> Lexeme return
Line# 21: Token <ID> Lexeme a
Line# 21: Token <ADDOP> Lexeme +
Line# 21: Token <CONST_INT> Lexeme 2
Line# 21: Token <SEMICOLON> Lexeme ;
Line# 22: Token <RCURL> Lexeme }
Line# 24: Token <VOID> Lexeme void
Line# 24: Token <ID> Lexeme foo3
Line# 24: Token <LPAREN> Lexeme (
Line# 24: Token <INT> Lexeme int
Line# 24: Token <ID> Lexeme a
Line# 24: Token <COMMA> Lexeme ,
Line# 24: Token <INT> Lexeme int
Line# 24: Token <ID> Lexeme b
Line# 24: Token <RPAREN> Lexeme )
Line# 24: Token <LCURL> Lexeme {
Line# 25: Token <ID> Lexeme y
Line# 25: Token <ASSIGNOP> Lexeme =
Line# 25: Token <CONST_INT> Lexeme 7
Line# 25: Token <SEMICOLON> Lexeme ;
Line# 26: Token <RCURL> Lexeme }
Line# 28: Token <INT> Lexeme int
Line# 28: Token <ID> Lexeme z
Line# 28: Token <LPAREN> Lexeme (
Line# 28: Token <INT> Lexeme int
Line# 28: Token <ID> Lexeme d
Line# 28: Token <RPAREN> Lexeme )
Line# 28: Token <LCURL> Lexeme {
Line# 29: Token <RETURN> Lexeme return
Line# 29: Token <ID> Lexeme d
Line# 29: Token <SEMICOLON> Lexeme ;
Line# 30: Token <RCURL> Lexeme }
Line# 32: Token <INT> Lexeme int
Line# 32: Token <ID> Lexeme var
Line# 32: Token <LPAREN> Lexeme (
Line# 32: Token <INT> Lexeme int
Line# 32: Token <ID> Lexeme a
Line# 32: Token <RPAREN> Lexeme )
Line# 32: Token <LCURL> Lexeme {
Line# 33: Token <RETURN> Lexeme return
Line# 33: Token <ID> Lexeme a
Line# 33: Token <SEMICOLON> Lexeme ;
Line# 34: Token <RCURL> Lexeme }
Line# 36: Token <VOID> Lexeme void
Line# 36: Token <ID> Lexeme foo4
Line# 36: Token <LPAREN> Lexeme (
Line# 36: Token <INT> Lexeme int
Line# 36: Token <ID> Lexeme a
Line# 36: Token <RPAREN> Lexeme )
Line# 36: Token <LCURL> Lexeme {
Line# 37: Token <RETURN> Lexeme return
Line# 37: Token <ID> Lexeme a
Line# 37: Token <ADDOP> Lexeme +
Line# 37: Token <CONST_INT> Lexeme 3
Line# 37: Token <SEMICOLON> Lexeme ;
Line# 38: Token <RCURL> Lexeme }
Line# 40: Token <INT> Lexeme int
Line# 40: Token <ID> Lexeme main
Line# 40: Token <LPAREN> Lexeme (
Line# 40: Token <RPAREN> Lexeme )
Line# 40: Token <LCURL> Lexeme {
Line# 41: Token <INT> Lexeme int
Line# 41: Token <ID> Lexeme a
Line# 41: Token <COMMA> Lexeme ,
Line# 41: Token <ID> Lexeme b
Line# 41: Token <COMMA> Lexeme ,
Line# 41: Token <ID> Lexeme c
Line# 41: Token <LTHIRD> Lexeme [
Line# 41: Token <CONST_INT> Lexeme 4
Line# 41: Token <RTHIRD> Lexeme ]
Line# 41: Token <COMMA> Lexeme ,
Line# 41: Token <ID> Lexeme dd
Line# 41: Token <COMMA> Lexeme ,
Line# 41: Token <ID> Lexeme ee
Line# 41: Token <SEMICOLON> Lexeme ;
Line# 42: Token <VOID> Lexeme void
Line# 42: Token <ID> Lexeme e
Line# 42: Token <SEMICOLON> Lexeme ;
Line# 43: Token <FLOAT> Lexeme float
Line# 43: Token <ID> Lexeme a
Line# 43: Token <COMMA> Lexeme ,
Line# 43: Token <ID> Lexeme c
Line# 43: Token <LTHIRD> Lexeme [
Line# 43: Token <CONST_INT> Lexeme 7
Line# 43: Token <RTHIRD> Lexeme ]
Line# 43: Token <SEMICOLON> Lexeme ;
Line# 45: Token <ID> Lexeme func
Line# 45: Token <LPAREN> Lexeme (
Line# 45: Token <CONST_FLOAT> Lexeme 2.5
Line# 45: Token <COMMA> Lexeme ,
Line# 45: Token <CONST_FLOAT> Lexeme 3.5
Line# 45: Token <RPAREN> Lexeme )
Line# 45: Token <SEMICOLON> Lexeme ;
Line# 48: Token <ID> Lexeme a
Line# 48: Token <ASSIGNOP> Lexeme =
Line# 48: Token <ID> Lexeme correct_foo
Line# 48: Token <LPAREN> Lexeme (
Line# 48: Token <ID> Lexeme a
Line# 48: Token <COMMA> Lexeme ,
Line# 48: Token <ID> Lexeme c
Line# 48: Token <RPAREN> Lexeme )
Line# 48: Token <SEMICOLON> Lexeme ;
Line# 49: Token <ID> Lexeme b
Line# 49: Token <ASSIGNOP> Lexeme =
Line# 49: Token <ID> Lexeme correct_foo
Line# 49: Token <LPAREN> Lexeme (
Line# 49: Token <ID> Lexeme a
Line# 49: Token <RPAREN> Lexeme )
Line# 49: Token <SEMICOLON> Lexeme ;
Line# 51: Token <ID> Lexeme k
Line# 51: Token <ASSIGNOP> Lexeme =
Line# 51: Token <CONST_INT> Lexeme 5
Line# 51: Token <ADDOP> Lexeme +
Line# 51: Token <CONST_INT> Lexeme 2
Line# 51: Token <SEMICOLON> Lexeme ;
Line# 52: Token <ID> Lexeme b
Line# 52: Token <LTHIRD> Lexeme [
Line# 52: Token <CONST_INT> Lexeme 5
Line# 52: Token <RTHIRD> Lexeme ]
Line# 52: Token <ASSIGNOP> Lexeme =
Line# 52: Token <CONST_INT> Lexeme 7
Line# 52: Token <SEMICOLON> Lexeme ;
Line# 53: Token <ID> Lexeme c
Line# 53: Token <LTHIRD> Lexeme [
Line# 53: Token <CONST_FLOAT> Lexeme 2.5
Line# 53: Token <RTHIRD> Lexeme ]
Line# 53: Token <ASSIGNOP> Lexeme =
Line# 53: Token <CONST_INT> Lexeme 8
Line# 53: Token <SEMICOLON> Lexeme ;
Line# 54: Token <ID> Lexeme c
Line# 54: Token <LTHIRD> Lexeme [
Line# 54: Token <CONST_INT> Lexeme 0
Line# 54: Token <RTHIRD> Lexeme ]
Line# 54: Token <ASSIGNOP> Lexeme =
Line# 54: Token <CONST_INT> Lexeme 2
Line# 54: Token <ADDOP> Lexeme +
Line# 54: Token <CONST_INT> Lexeme 5
Line# 54: Token <MULOP> Lexeme *
Line# 54: Token <ID> Lexeme foo4
Line# 54: Token <LPAREN> Lexeme (
Line# 54: Token <CONST_INT> Lexeme 7
Line# 54: Token <RPAREN> Lexeme )
Line# 54: Token <SEMICOLON> Lexeme ;
Line# 55: Token <ID> Lexeme c
Line# 55: Token <LTHIRD> Lexeme [
Line# 55: Token <CONST_INT> Lexeme 1
Line# 55: Token <RTHIRD> Lexeme ]
Line# 55: Token <ASSIGNOP> Lexeme =
Line# 55: Token <CONST_INT> Lexeme 5
Line# 55: Token <SEMICOLON> Lexeme ;
Line# 56: Token <ID> Lexeme foo4
Line# 56: Token <LPAREN> Lexeme (
Line# 56: Token <ID> Lexeme c
Line# 56: Token <LTHIRD> Lexeme [
Line# 56: Token <CONST_INT> Lexeme 1
Line# 56: Token <RTHIRD> Lexeme ]
Line# 56: Token <RPAREN> Lexeme )
Line# 56: Token <SEMICOLON> Lexeme ;
Line# 57: Token <ID> Lexeme c
Line# 57: Token <LTHIRD> Lexeme [
Line# 57: Token <CONST_INT> Lexeme 2
Line# 57: Token <RTHIRD> Lexeme ]
Line# 57: Token <ASSIGNOP> Lexeme =
Line# 57: Token <ID> Lexeme foo4
Line# 57: Token <LPAREN> Lexeme (
Line# 57: Token <ID> Lexeme c
Line# 57: Token <LTHIRD> Lexeme [
Line# 57: Token <CONST_INT> Lexeme 1
Line# 57: Token <RTHIRD> Lexeme ]
Line# 57: Token <RPAREN> Lexeme )
Line# 57: Token <SEMICOLON> Lexeme ;
Line# 58: Token <ID> Lexeme c
Line# 58: Token <LTHIRD> Lexeme [
Line# 58: Token <CONST_INT> Lexeme 3
Line# 58: Token <RTHIRD> Lexeme ]
Line# 58: Token <ASSIGNOP> Lexeme =
Line# 58: Token <CONST_FLOAT> Lexeme 2.7
Line# 58: Token <SEMICOLON> Lexeme ;
Line# 59: Token <ID> Lexeme b
Line# 59: Token <ASSIGNOP> Lexeme =
Line# 59: Token <CONST_INT> Lexeme 5
Line# 59: Token <MULOP> Lexeme %
Line# 59: Token <CONST_INT> Lexeme 0
Line# 59: Token <SEMICOLON> Lexeme ;
Line# 60: Token <ID> Lexeme b
Line# 60: Token <ASSIGNOP> Lexeme =
Line# 60: Token <CONST_INT> Lexeme 2
Line# 60: Token <MULOP> Lexeme %
Line# 60: Token <CONST_FLOAT> Lexeme 3.5
Line# 60: Token <SEMICOLON> Lexeme ;
Line# 62: Token <ID> Lexeme dd
Line# 62: Token <ASSIGNOP> Lexeme =
Line# 62: Token <ID> Lexeme foo5
Line# 62: Token <LPAREN> Lexeme (
Line# 62: Token <ID> Lexeme a
Line# 62: Token <RPAREN> Lexeme )
Line# 62: Token <SEMICOLON> Lexeme ;
Line# 67: Token <PRINTLN> Lexeme printf
Line# 67: Token <LPAREN> Lexeme (
Line# 67: Token <ID> Lexeme h
Line# 67: Token <RPAREN> Lexeme )
Line# 67: Token <SEMICOLON> Lexeme ;
Line# 68: Token <RETURN> Lexeme return
Line# 68: Token <CONST_INT> Lexeme 0
Line# 68: Token <SEMICOLON> Lexeme ;
Line# 71: Token <RCURL> Lexeme }
