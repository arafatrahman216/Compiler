Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme x
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme y
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme z
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 1: Token <FLOAT> Lexeme float
Line# 1: Token <ID> Lexeme a
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 3: Token <INT> Lexeme int
Line# 3: Token <ID> Lexeme var
Line# 3: Token <LPAREN> Lexeme (
Line# 3: Token <INT> Lexeme int
Line# 3: Token <ADDOP> Lexeme -
Line# 3: Token <RPAREN> Lexeme )
Line# 3: Token <LCURL> Lexeme {
Line# 4: Token <RCURL> Lexeme }
Line# 7: Token <INT> Lexeme int
Line# 7: Token <ID> Lexeme main
Line# 7: Token <LPAREN> Lexeme (
Line# 7: Token <RPAREN> Lexeme )
Line# 7: Token <LCURL> Lexeme {
Line# 8: Token <INT> Lexeme int
Line# 8: Token <ID> Lexeme x
Line# 8: Token <ADDOP> Lexeme -
Line# 8: Token <ID> Lexeme y
Line# 8: Token <COMMA> Lexeme ,
Line# 8: Token <ID> Lexeme z
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <ID> Lexeme a
Line# 9: Token <ASSIGNOP> Lexeme =
Line# 9: Token <CONST_INT> Lexeme 2
Line# 9: Token <ADDOP> Lexeme +
Line# 9: Token <ASSIGNOP> Lexeme =
Line# 9: Token <CONST_INT> Lexeme 6
Line# 10: Token <HASH> Lexeme #
Line# 11: Token <ID> Lexeme x
Line# 11: Token <ASSIGNOP> Lexeme =
Line# 11: Token <CONST_INT> Lexeme 2
Line# 11: Token <SEMICOLON> Lexeme ;
Line# 14: Token <RETURN> Lexeme return
Line# 14: Token <CONST_INT> Lexeme 0
Line# 14: Token <SEMICOLON> Lexeme ;
Line# 15: Token <RCURL> Lexeme }
